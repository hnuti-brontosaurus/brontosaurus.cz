@use "sass:color";
@use "../imports/settings";

@mixin presentationBox-breakpoint-textOnSide-from() {
	@media (settings.$detail-breakpoint-large-from) {
		@content;
	}
}

.presentationBox {
	position: relative;
	min-block-size: 18rem;
	padding: 8rlh 1rlh 1rlh;
	margin-inline: -1rlh;
	background-color: var(--hb-colors-tinge);
	overflow: hidden; // prevent background-image to go out of set border-radius
}
@include settings.header-navigation-expanded-from() {
	.presentationBox {
		margin-inline: -2rlh;
	}
}
@include presentationBox-breakpoint-textOnSide-from() {
	.presentationBox {
		display: flex;
		flex-direction: column;
		justify-content: center;
		padding: 2rlh;
		margin-inline: auto;
		border-radius: 2em;
		background-color: transparent;
	}
}

.presentationBox::before {
	content: "";
	position: absolute;
	inset-block-start: 0;
	inset-inline-start: 0;
	display: block;
	inline-size: 100%;
	block-size: 7rlh; // we need it in line height unit as we use padding-block-start on the text below
	background-image: var(--presentationBox-background-image-url);
	background-size: cover;
	background-position: center center;
	background-repeat: no-repeat;
}
@include presentationBox-breakpoint-textOnSide-from() {
	.presentationBox::before {
		inset-inline-start: 50%;
		inline-size: 50%;
		block-size: 100%;
		z-index: -1;
	}
}
@include presentationBox-breakpoint-textOnSide-from() {
	.presentationBox--thirdsLayout::before {
		inline-size: 40%;
		inset-inline-start: 60%;
	}
}
@include presentationBox-breakpoint-textOnSide-from() {
	.presentationBox--textOnRight::before {
		inset-inline-start: 0;
	}
}

.presentationBox::after {
	inset-inline-start: 0;
}
@include presentationBox-breakpoint-textOnSide-from() {
	.presentationBox::after {
		content: "";
		display: block;
		inline-size: 50%;
		block-size: 100%;
		position: absolute;
		inset-block-start: 0;
		z-index: -1;
		background-color: color-mix(in srgb, var(--hb-colors-tinge) 90%, transparent);
	}
}
@include presentationBox-breakpoint-textOnSide-from() {
	.presentationBox--thirdsLayout::after {
		inline-size: 60%;
	}
}
.presentationBox--textOnRight::after {
	inset-inline-start: initial;
	inset-inline-end: 0;
}


.presentationBox__text {
	margin: 0;
}
@include presentationBox-breakpoint-textOnSide-from() {
	.presentationBox__text {
		max-inline-size: calc(50% - 2rlh);
	}
}
.presentationBox__text:not(:last-child) {
	margin-block-end: 0.5rlh;
}
@include presentationBox-breakpoint-textOnSide-from() {
	.presentationBox--thirdsLayout .presentationBox__text {
		max-inline-size: calc(60% - 2rlh);
	}
}
@include presentationBox-breakpoint-textOnSide-from() {
	.presentationBox--textOnRight .presentationBox__text {
		margin-inline-start: calc(50% + 2rlh);
	}
}
@include presentationBox-breakpoint-textOnSide-from() {
	.presentationBox--thirdsLayout.presentationBox--textOnRight .presentationBox__text {
		margin-inline-start: calc(40% + 2rlh - 0.5rem); // constant 0.5rem so it has vr offset from left
	}
}


.presentationBox__quotation {
	margin-block-end: 1rlh;
}
.presentationBox__quotation::before {
	content: "";
	position: absolute;
	inset-inline-end: calc(50% + 1rlh);
	inset-block-start: 0.5rlh;
	mask-image: url("../../../images/icons/icon-quote.svg");
	display: block;
	aspect-ratio: 5/6;
	inline-size: 1.7rem;
	background-color: var(--hb-colors-text);
	mask-position: center;
	mask-size: auto 100%;
	opacity: 0.1;
}
.presentationBox--textOnRight .presentationBox__quotation::before {
	inset-inline-end: 1rlh;
}